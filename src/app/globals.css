@import "tailwindcss";

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --color-sidebar: hsl(var(--sidebar-background));
  --color-sidebar-foreground: hsl(var(--sidebar-foreground));
  --color-sidebar-primary: hsl(var(--sidebar-primary));
  --color-sidebar-primary-foreground: hsl(var(--sidebar-primary-foreground));
  --color-sidebar-accent: hsl(var(--sidebar-accent));
  --color-sidebar-accent-foreground: hsl(var(--sidebar-accent-foreground));
  --color-sidebar-border: hsl(var(--sidebar-border));
  --color-sidebar-ring: hsl(var(--sidebar-ring));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: 210 50% 98%;
    --foreground: 220 60% 20%;
    --card: 0 0% 100%;
    --card-foreground: 220 60% 20%;
    --popover: 0 0% 100%;
    --popover-foreground: 220 60% 20%;
    --primary: 220 80% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 210 40% 90%;
    --secondary-foreground: 220 60% 30%;
    --muted: 210 30% 95%;
    --muted-foreground: 220 40% 50%;
    --accent: 190 80% 50%;
    --accent-foreground: 220 60% 20%;
    --destructive: 0 70% 65%;
    --destructive-foreground: 0 0% 100%;
    --border: 220 30% 85%;
    --input: 220 30% 85%;
    --ring: 220 80% 50%;
    --radius: 0.75rem;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
  .dark {
    --background: 220 50% 10%;
    --foreground: 210 20% 95%;
    --card: 220 40% 15%;
    --card-foreground: 210 20% 95%;
    --popover: 220 40% 15%;
    --popover-foreground: 210 20% 95%;
    --primary: 210 80% 60%;
    --primary-foreground: 220 50% 10%;
    --secondary: 220 30% 20%;
    --secondary-foreground: 210 30% 90%;
    --muted: 220 30% 20%;
    --muted-foreground: 210 30% 70%;
    --accent: 190 70% 40%;
    --accent-foreground: 210 20% 95%;
    --destructive: 0 70% 60%;
    --destructive-foreground: 0 0% 100%;
    --border: 220 30% 25%;
    --input: 220 30% 25%;
    --ring: 210 80% 60%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    background-image: radial-gradient(
      circle at top right,
      hsl(var(--primary) / 0.15),
      hsl(var(--accent) / 0.05) 40%,
      transparent 80%
    );
    background-attachment: fixed;
  }
}

/* Glass effect utilities */
.glass {
  background-color: hsl(var(--card) / 0.7);
  backdrop-filter: blur(12px);
  border: 1px solid hsl(var(--border) / 0.5);
  box-shadow: 0 4px 6px hsl(var(--foreground) / 0.05);
  position: relative;
  overflow: hidden;
}

.glass::before {
  content: "";
  position: absolute;
  top: 0;
  left: -50%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent,
    hsl(var(--background) / 0.2),
    transparent
  );
  transform: skewX(-25deg);
  pointer-events: none;
}

.glass-card {
  background-color: hsl(var(--card) / 0.7);
  backdrop-filter: blur(12px);
  border: 1px solid hsl(var(--border) / 0.5);
  box-shadow: 0 4px 6px hsl(var(--foreground) / 0.05);
  border-radius: var(--radius);
  position: relative;
  overflow: hidden;
}

.glass-card::before {
  content: "";
  position: absolute;
  top: 0;
  left: -50%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent,
    hsl(var(--background) / 0.2),
    transparent
  );
  transform: skewX(-25deg);
  pointer-events: none;
}

.gradient-text {
  color: transparent;
  background-clip: text;
  -webkit-background-clip: text;
  background-image: linear-gradient(
    to right,
    hsl(var(--primary)),
    hsl(var(--accent))
  );
  /* Adjust line height to create more space */
  line-height: 1.3;
  /* Ensure the background extends beyond the text */
  display: inline-block;
  /* Fix for Safari */
  -webkit-box-decoration-break: clone;
  box-decoration-break: clone;
}

.gradient-bg {
  background-image: linear-gradient(
    to bottom right,
    hsl(var(--primary) / 0.8),
    hsl(var(--accent) / 0.8)
  );
}

.gradient-border {
  position: relative;
  border-radius: inherit;
}

.gradient-border::before {
  content: "";
  position: absolute;
  inset: -1px;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(
    to right,
    hsl(var(--primary)),
    hsl(var(--accent))
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

/* Ocean wave effect */
.wave-bg {
  position: relative;
  overflow: hidden;
}

.wave-bg::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 10px;
  background: linear-gradient(
    90deg,
    hsl(var(--primary) / 0.3),
    hsl(var(--accent) / 0.3) 50%,
    hsl(var(--primary) / 0.3) 100%
  );
  filter: blur(5px);
  animation: wave 8s ease-in-out infinite alternate;
}

@keyframes wave {
  0% {
    transform: translateX(-30%) scaleY(1);
  }
  50% {
    transform: translateX(0%) scaleY(1.2);
  }
  100% {
    transform: translateX(30%) scaleY(1);
  }
}

/* Animation keyframes */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* Animation classes */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-pulse-slow {
  animation: pulse 4s ease-in-out infinite;
}

/* Water drop effect */
.water-drop {
  position: relative;
}

.water-drop::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(
    135deg,
    transparent 0%,
    hsl(var(--primary) / 0.3) 50%,
    transparent 100%
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.water-drop:hover::before {
  opacity: 1;
}
